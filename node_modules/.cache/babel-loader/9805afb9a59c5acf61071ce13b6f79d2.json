{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/Team-up-learning_front/src/View/CourseRoomView.js\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100vh;\n  flex-direction: row;\n`;\nconst LeftRow = styled.div`\n  width: 40%;\n  height: 100%;\n`;\nconst RightRow = styled.div`\n  flex: 1;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Video = styled.video`\n  height: 50%;\n  width: 100%;\n  border: 1px solid black;\n`;\n\nconst Room = props => {\n  const socketRef = useRef();\n  const userVideoRef = useRef();\n  const partnerVideo = useRef();\n  const peerRef = useRef();\n  const VideoPlayer = useRef();\n  const [videoID, setVideoID] = useState(\"\");\n  const [videohost, setVideohost] = useState(\"\");\n\n  function createPeer(partnerID, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      const payload = {\n        partnerID,\n        callerID,\n        signal\n      };\n      socketRef.current.emit(\"call partner\", payload);\n    });\n    peer.on(\"stream\", handleStream);\n    peer.on(\"data\", handleData);\n    return peer;\n  }\n\n  function addPeer(incomingSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      const payload = {\n        callerID,\n        signal\n      };\n      socketRef.current.emit(\"accept call\", payload);\n    });\n    peer.on(\"stream\", handleStream);\n    peer.on(\"data\", handleData);\n    peer.signal(incomingSignal);\n    return peer;\n  }\n\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      userVideoRef.current.srcObject = stream;\n      socketRef.current = io.connect('http://localhost:5000/');\n      socketRef.current.emit(\"join room\", props.match.params.roomID);\n      socketRef.current.on(\"other user\", partnerID => {\n        if (partnerID) {\n          peerRef.current = createPeer(partnerID, socketRef.current.id, stream);\n        }\n      });\n      socketRef.current.on(\"caller signal\", incoming => {\n        peerRef.current = addPeer(incoming.signal, incoming.callerID, stream);\n      });\n      socketRef.current.on(\"callee signal\", signal => {\n        peerRef.current.signal(signal);\n      });\n      socketRef.current.on(\"room full\", () => {\n        alert(\"room is full\");\n      });\n    });\n  }, [props.match.params.roomID]);\n  /*useEffect(() => {\n    tag = document.createElement(\"script\");\n    tag.src = \"https://developers.panopto.com/scripts/embedapi.min.js\";\n    //tag.src = \"https://www.youtube.com/iframe_api\";\n    var firstScriptTag = document.getElementsByTagName(\"script\")[0];\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    //window.onYouTubeIframeAPIReady = loadVideoPlayer;\n    window.onPanoptoEmbedApiReady = onPanoptoEmbedApiReady;\n  }, []);*/\n\n  function handlePanopto() {\n    var firstScriptTag = document.getElementsByTagName('script')[0];\n    var tag = document.createElement(\"script\");\n    tag.src = \"https://developers.panopto.com/scripts/embedapi.min.js\";\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    window.onPanoptoEmbedApiReady = onPanoptoEmbedApiReady;\n  }\n\n  function handleYoutube() {\n    var tag = document.createElement(\"script\");\n    tag.src = \"https://www.youtube.com/iframe_api\";\n    var firstScriptTag = document.getElementsByTagName('script')[0];\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    window.onYouTubeIframeAPIReady = loadVideoPlayer;\n  }\n\n  function onPanoptoEmbedApiReady() {\n    const player = new window.EmbedApi(\"player\", {\n      width: \"640\",\n      height: \"390\",\n      //This is the URL of your Panopto site\n      serverName: \"uncch.hosted.panopto.com\",\n      sessionId: videoID,\n      videoParams: {\n        // Optional parameters\n        //interactivity parameter controls if the user sees table of contents, discussions, notes, & in-video search\n        \"interactivity\": \"none\",\n        \"showtitle\": \"false\"\n      },\n      events: {\n        \"onIframeReady\": onPanoptoIframeReady,\n        \"onReady\": onPanoptoVideoReady,\n        \"onStateChange\": onPanoptoStateUpdate\n      }\n    });\n    VideoPlayer.current = player;\n  }\n\n  function onPanoptoIframeReady() {\n    VideoPlayer.current.loadVideo();\n  } //The API will call this function when the video player is ready\n\n\n  function onPanoptoVideoReady() {\n    VideoPlayer.current.seekTo(100);\n  } //The API calls this function when a player state change happens\n\n\n  function onPanoptoStateUpdate(state) {\n    VideoPlayer.current.setVolume(0.3);\n    VideoPlayer.current.setPlaybackRate(2);\n  }\n\n  function loadVideoPlayer() {\n    const player = new window.YT.Player(\"player\", {\n      height: \"390\",\n      width: \"640\",\n      videoId: videoID\n    });\n    VideoPlayer.current = player;\n  }\n\n  function stopVideo() {\n    try {\n      peerRef.current.send(JSON.stringify({\n        type: \"pause\"\n      }));\n    } catch (err) {}\n\n    VideoPlayer.current.pauseVideo();\n  }\n\n  function playVideo() {\n    try {\n      peerRef.current.send(JSON.stringify({\n        type: \"play\"\n      }));\n    } catch (err) {}\n\n    VideoPlayer.current.playVideo();\n  }\n\n  function handleVideo() {\n    document.getElementsByTagName('input')[0].remove();\n    document.getElementById('loadVideo').remove();\n\n    if (videohost == \"y\") {\n      handleYoutube();\n    } else {\n      handlePanopto();\n    }\n\n    var play = document.createElement(\"button\");\n    play.innerHTML = \"Play Video\";\n    play.addEventListener(\"click\", playVideo);\n    var stop = document.createElement(\"button\");\n    stop.innerHTML = \"Stop Video\";\n    stop.addEventListener(\"click\", stopVideo);\n    var div = document.getElementById(\"controls\");\n    div.appendChild(play);\n    div.appendChild(stop);\n  }\n\n  function loadVideo() {\n    if (videohost == '') {\n      alert(\"please select video player first\");\n      return;\n    }\n\n    if (videoID == '') {\n      alert(\"please upload video id\");\n      return;\n    }\n\n    try {\n      peerRef.current.send(JSON.stringify({\n        type: \"newVideo\",\n        host: videohost,\n        data: videoID\n      }));\n    } catch (err) {}\n\n    handleVideo();\n  }\n\n  function ClickYoutube(e) {\n    setVideohost(\"y\");\n    document.getElementById('YT').style.backgroundColor = \"#666666\";\n    document.getElementById('PT').style.backgroundColor = \"#668cff\";\n  }\n\n  function ClickPT(e) {\n    setVideohost(\"n\");\n    document.getElementById('YT').style.backgroundColor = \"#668cff\";\n    document.getElementById('PT').style.backgroundColor = \"#666666\";\n  }\n\n  function handleStream(stream) {\n    partnerVideo.current.srcObject = stream;\n  }\n\n  function handleData(data) {\n    const parsed = JSON.parse(data);\n\n    if (parsed.type === \"newVideo\") {\n      let host = parsed.host;\n      let id = parsed.data;\n      console.log(host);\n      console.log(id);\n      setVideohost(host);\n      setVideoID(id);\n      setTimeout(function () {\n        console.log(videohost);\n      }, 1000);\n      handleVideo();\n    } else if (parsed.type === \"pause\") {\n      VideoPlayer.current.pauseVideo();\n    } else {\n      VideoPlayer.current.playVideo();\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LeftRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Video, {\n    muted: true,\n    autoPlay: true,\n    ref: userVideoRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Video, {\n    muted: true,\n    autoPlay: true,\n    ref: partnerVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(RightRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"host\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"PT\",\n    backgroundColor: \"#668cff\",\n    onClick: ClickPT,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }\n  }, \"Panopto\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"YT\",\n    backgroundColor: \"#668cff\",\n    onClick: ClickYoutube,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }\n  }, \"Youtube\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"player\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"video link\",\n    value: videoID,\n    onChange: e => setVideoID(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"loadVideo\",\n    onClick: loadVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }\n  }, \"Load video\"))));\n};\n\nexport default Room;","map":{"version":3,"sources":["/Users/owner/Desktop/Team-up-learning_front/src/View/CourseRoomView.js"],"names":["React","useEffect","useState","useRef","io","Peer","styled","Container","div","LeftRow","RightRow","Video","video","Room","props","socketRef","userVideoRef","partnerVideo","peerRef","VideoPlayer","videoID","setVideoID","videohost","setVideohost","createPeer","partnerID","callerID","stream","peer","initiator","trickle","on","signal","payload","current","emit","handleStream","handleData","addPeer","incomingSignal","navigator","mediaDevices","getUserMedia","audio","then","srcObject","connect","match","params","roomID","id","incoming","alert","handlePanopto","firstScriptTag","document","getElementsByTagName","tag","createElement","src","parentNode","insertBefore","window","onPanoptoEmbedApiReady","handleYoutube","onYouTubeIframeAPIReady","loadVideoPlayer","player","EmbedApi","width","height","serverName","sessionId","videoParams","events","onPanoptoIframeReady","onPanoptoVideoReady","onPanoptoStateUpdate","loadVideo","seekTo","state","setVolume","setPlaybackRate","YT","Player","videoId","stopVideo","send","JSON","stringify","type","err","pauseVideo","playVideo","handleVideo","remove","getElementById","play","innerHTML","addEventListener","stop","appendChild","host","data","ClickYoutube","e","style","backgroundColor","ClickPT","parsed","parse","console","log","setTimeout","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100vh;\n  flex-direction: row;\n`;\n\nconst LeftRow = styled.div`\n  width: 40%;\n  height: 100%;\n`;\n\nconst RightRow = styled.div`\n  flex: 1;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Video = styled.video`\n  height: 50%;\n  width: 100%;\n  border: 1px solid black;\n`;\n\nconst Room = (props) => {\n  const socketRef = useRef();\n  const userVideoRef = useRef();\n  const partnerVideo = useRef();\n  const peerRef = useRef();\n  const VideoPlayer = useRef();\n  const [videoID, setVideoID] = useState(\"\");\n  const [videohost, setVideohost] = useState(\"\");\n\n  function createPeer(partnerID, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n\n    peer.on(\"signal\", (signal) => {\n      const payload = {\n        partnerID,\n        callerID,\n        signal\n      };\n      socketRef.current.emit(\"call partner\", payload);\n    });\n\n    peer.on(\"stream\", handleStream);\n    peer.on(\"data\", handleData);\n\n    return peer;\n  }\n\n  function addPeer(incomingSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n\n    peer.on(\"signal\", (signal) => {\n      const payload = {\n        callerID,\n        signal\n      };\n      socketRef.current.emit(\"accept call\", payload);\n    });\n\n    peer.on(\"stream\", handleStream);\n    peer.on(\"data\", handleData);\n\n    peer.signal(incomingSignal);\n    return peer;\n  }\n\n  useEffect(() => {\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then((stream) => {\n        userVideoRef.current.srcObject = stream;\n        socketRef.current = io.connect('http://localhost:5000/');\n        socketRef.current.emit(\"join room\", props.match.params.roomID);\n\n        socketRef.current.on(\"other user\", (partnerID) => {\n          if (partnerID) {\n            peerRef.current = createPeer(\n              partnerID,\n              socketRef.current.id,\n              stream\n            );\n          }\n        });\n\n        socketRef.current.on(\"caller signal\", (incoming) => {\n          peerRef.current = addPeer(incoming.signal, incoming.callerID, stream);\n        });\n\n        socketRef.current.on(\"callee signal\", (signal) => {\n          peerRef.current.signal(signal);\n        });\n\n        socketRef.current.on(\"room full\", () => {\n          alert(\"room is full\");\n        });\n      });\n  }, [props.match.params.roomID]);\n\n  /*useEffect(() => {\n    tag = document.createElement(\"script\");\n    tag.src = \"https://developers.panopto.com/scripts/embedapi.min.js\";\n    //tag.src = \"https://www.youtube.com/iframe_api\";\n    var firstScriptTag = document.getElementsByTagName(\"script\")[0];\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    //window.onYouTubeIframeAPIReady = loadVideoPlayer;\n    window.onPanoptoEmbedApiReady = onPanoptoEmbedApiReady;\n  }, []);*/\n\n\n  function handlePanopto() {\n    var firstScriptTag = document.getElementsByTagName('script')[0];\n    var tag = document.createElement(\"script\");\n    tag.src = \"https://developers.panopto.com/scripts/embedapi.min.js\";\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    window.onPanoptoEmbedApiReady = onPanoptoEmbedApiReady;\n  }\n\n  function handleYoutube() {\n    var tag = document.createElement(\"script\");\n    tag.src = \"https://www.youtube.com/iframe_api\";\n    var firstScriptTag = document.getElementsByTagName('script')[0];\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    window.onYouTubeIframeAPIReady = loadVideoPlayer;\n  }\n\n  function onPanoptoEmbedApiReady(){\n            const player = new window.EmbedApi(\"player\", {\n                width: \"640\",\n                height: \"390\",\n                //This is the URL of your Panopto site\n                serverName: \"uncch.hosted.panopto.com\",\n                sessionId: videoID,\n                videoParams: { // Optional parameters\n                //interactivity parameter controls if the user sees table of contents, discussions, notes, & in-video search\n                    \"interactivity\": \"none\",\n                    \"showtitle\": \"false\"\n                },\n                events: {\n                    \"onIframeReady\": onPanoptoIframeReady,\n                    \"onReady\": onPanoptoVideoReady,\n                    \"onStateChange\": onPanoptoStateUpdate\n                }\n            });\n            VideoPlayer.current = player;\n  }\n\n  function onPanoptoIframeReady()\n  {\n    VideoPlayer.current.loadVideo();\n  }\n\n    //The API will call this function when the video player is ready\n  function onPanoptoVideoReady()\n  {\n      VideoPlayer.current.seekTo(100);\n  }\n\n  //The API calls this function when a player state change happens\n   function onPanoptoStateUpdate(state)\n  {\n          VideoPlayer.current.setVolume(0.3);\n          VideoPlayer.current.setPlaybackRate(2);\n  }\n\n  function loadVideoPlayer() {\n    const player = new window.YT.Player(\"player\", {\n      height: \"390\",\n      width: \"640\",\n      videoId: videoID\n    });\n\n    VideoPlayer.current = player;\n  }\n\n  function stopVideo() {\n    try {\n          peerRef.current.send(JSON.stringify({ type: \"pause\" }));\n      }\n      catch(err) {\n      }\n    VideoPlayer.current.pauseVideo();\n  }\n\n  function playVideo() {\n    try {\n        peerRef.current.send(JSON.stringify({ type: \"play\" }));\n      }\n      catch(err) {\n      }\n    VideoPlayer.current.playVideo();\n  }\n\n  function handleVideo(){\n    document.getElementsByTagName('input')[0].remove();\n    document.getElementById('loadVideo').remove();\n    if(videohost==\"y\"){\n      handleYoutube();\n    } else {\n      handlePanopto();\n    }\n    var play= document.createElement(\"button\");\n    play.innerHTML = \"Play Video\";\n    play.addEventListener (\"click\", playVideo);\n    var stop= document.createElement(\"button\");\n    stop.innerHTML = \"Stop Video\";\n    stop.addEventListener (\"click\", stopVideo);\n    var div = document.getElementById(\"controls\");\n    div.appendChild(play);\n    div.appendChild(stop);\n  }\n\n  function loadVideo() {\n    if(videohost==''){\n      alert(\"please select video player first\");\n      return;\n    }\n    if(videoID==''){\n      alert(\"please upload video id\");\n      return;\n    }\n    try {\n        peerRef.current.send(JSON.stringify({ type: \"newVideo\",host:videohost, data: videoID }));\n      }\n      catch(err) {\n    }\n    handleVideo();\n  }\n\n\n  function ClickYoutube(e){\n    setVideohost(\"y\");\n    document.getElementById('YT').style.backgroundColor=\"#666666\";\n    document.getElementById('PT').style.backgroundColor=\"#668cff\";\n  }\n\n  function ClickPT(e){\n    setVideohost(\"n\");\n    document.getElementById('YT').style.backgroundColor=\"#668cff\";\n    document.getElementById('PT').style.backgroundColor=\"#666666\";\n  }\n\n\n  function handleStream(stream) {\n    partnerVideo.current.srcObject = stream;\n  }\n\n  function handleData(data) {\n    const parsed = JSON.parse(data);\n    if (parsed.type === \"newVideo\") {\n      let host = parsed.host;\n      let id = parsed.data;\n      console.log(host);\n      console.log(id);\n      setVideohost(host);\n      setVideoID(id);\n      setTimeout(function(){console.log(videohost)}, 1000);\n      handleVideo();\n    } else if (parsed.type === \"pause\") {\n      VideoPlayer.current.pauseVideo();\n    } else {\n      VideoPlayer.current.playVideo();\n    }\n  }\n\n  return (\n    <Container>\n      <LeftRow>\n        <Video muted autoPlay ref={userVideoRef} />\n        <Video muted autoPlay ref={partnerVideo} />\n      </LeftRow>\n      <RightRow>\n        <div id = \"host\">\n        <button id=\"PT\" backgroundColor=\"#668cff\" onClick={ClickPT}>Panopto</button>\n        <button id=\"YT\" backgroundColor=\"#668cff\" onClick={ClickYoutube}>Youtube</button>\n        </div>\n        <div id=\"player\" />\n        <div id=\"controls\">\n        <input\n          type=\"text\"\n          placeholder=\"video link\"\n          value={videoID}\n          onChange={(e) => setVideoID(e.target.value)}\n        />\n        <button id =\"loadVideo\" onClick={loadVideo}>Load video</button>\n        </div>\n      </RightRow>\n    </Container>\n  );\n};\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}
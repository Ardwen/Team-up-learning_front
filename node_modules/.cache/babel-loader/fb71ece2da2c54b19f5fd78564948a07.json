{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/Team-up-learning_front/src/View/LoginView.js\";\nimport React, { useState } from \"react\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Input, Button, Checkbox, Typography } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport API from '../Utils/api.js';\nconst {\n  Title\n} = Typography;\n\nfunction Login(props) {\n  const [formErrorMessage, setFormErrorMessage] = useState('');\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    validationSchema: Yup.object().shape({\n      username: Yup.string().required('username is required'),\n      password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required')\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        API.post(`user/login`, {\n          userName: values.username,\n          userPassword: values.password\n        }).then(response => {\n          sessionStorage.setItem(\"username\", values.username);\n          sessionStorage.setItem(\"access_token\", response.data.accessToken);\n          props.history.push('/dashboard');\n        }).catch(err => {\n          setFormErrorMessage('Check out your Account or Password again');\n          setTimeout(() => {\n            setFormErrorMessage(\"\");\n          }, 3000);\n        });\n        setSubmitting(false);\n      }, 500);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, props => {\n    const {\n      values,\n      touched,\n      errors,\n      dirty,\n      isSubmitting,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      handleReset\n    } = props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      level: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"Log In\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        width: '350px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"username\",\n      prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 27\n        }\n      }),\n      placeholder: \"Enter your username\",\n      value: values.username,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.username && touched.username ? 'text-input error' : 'text-input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }), errors.username && touched.username && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }, errors.username)), /*#__PURE__*/React.createElement(Form.Item, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"password\",\n      prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 27\n        }\n      }),\n      placeholder: \"Enter your password\",\n      type: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.password && touched.password ? 'text-input error' : 'text-input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }, errors.password)), formErrorMessage && /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: '#ff0000bf',\n        fontSize: '0.7rem',\n        border: '1px solid',\n        padding: '1rem',\n        borderRadius: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, formErrorMessage)), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      style: {\n        minWidth: '100%'\n      },\n      disabled: isSubmitting,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }, \"Log in\")), \"Or \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 20\n      }\n    }, \"register now!\"))));\n  });\n}\n\n;\nexport default Login;","map":{"version":3,"sources":["/Users/owner/Desktop/Team-up-learning_front/src/View/LoginView.js"],"names":["React","useState","Formik","Yup","Form","Input","Button","Checkbox","Typography","UserOutlined","LockOutlined","API","Title","Login","props","formErrorMessage","setFormErrorMessage","username","password","object","shape","string","required","min","values","setSubmitting","setTimeout","post","userName","userPassword","then","response","sessionStorage","setItem","data","accessToken","history","push","catch","err","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","width","color","fontSize","border","padding","borderRadius","minWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Input, Button, Checkbox, Typography } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport API from '../Utils/api.js';\nconst { Title } = Typography;\n\n\nfunction Login(props) {\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        username: Yup.string()\n          .required('username is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          API.post(`user/login`, {\n               userName: values.username,\n               userPassword: values.password\n          }).then(response => {\n              sessionStorage.setItem(\"username\", values.username)\n              sessionStorage.setItem(\"access_token\",response.data.accessToken);\n              props.history.push('/dashboard');\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"username\"\n                  prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your username\"\n                  value={values.username}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.username && touched.username ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.username && touched.username && (\n                  <div className=\"input-feedback\">{errors.username}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}